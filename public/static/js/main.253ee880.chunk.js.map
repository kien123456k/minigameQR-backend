{"version":3,"sources":["routes/PublicRoute.js","routes/PrivateRoute.js","components/Header/index.js","configurations/index.js","containers/QuizInstruction/index.js","components/InputField/index.js","utils/LocalStorageUtils.js","utils/ApiCaller.js","containers/WelcomePage/index.js","containers/InvalidToken/index.js","containers/QuizSummary/index.js","components/Timer/index.js","components/Timer/convert-time.js","containers/QuizPlay/Header/index.js","containers/QuizPlay/Quiz/Question/index.js","components/Answer-box/index.js","containers/QuizPlay/Quiz/Answer/index.js","containers/QuizPlay/Quiz/index.js","routes/index.js","containers/QuizPlay/index.js","App.js","index.js","assets/images/logo.png","assets/images/error.jpg"],"names":["PublicRoute","props","localStorage","getItem","to","PrivateRoute","component","rest","Header","className","src","alt","API_ROOT_URL","QuizInstruction","history","useHistory","handleClick","a","token","JSON","parse","name","studentID","Axios","method","url","params","response","data","success","setItem","stringify","questions","timeStart","push","status","removeItem","id","onClick","InputField","register","label","type","errors","valid","icon","isTaken","useState","isFocused","setIsFocused","currentText","setCurrentText","ref","required","onChange","e","target","value","onFocus","onBlur","message","key","defaultValue","item","clear","this","window","location","reload","jwt_decode","ex","deleteUser","getHeaders","Authorization","LocalStorageUtils","getToken","request","endpoint","headers","body","objectAssign","post","WelcomePage","useForm","handleSubmit","isSubmitted","setIsSubmitted","isError","setIsError","onSubmit","toUpperCase","logoMiniGame","style","display","disabled","InvalidToken","errorPic","width","QuizSummary","Timer","startTime","initialTime","time","setTime","useEffect","timer","setInterval","Date","now","clearInterval","mSec","seconds","Math","round","minutes","floor","sec","timeConvert","React","memo","indexOfQuestion","Question","content","AnswerBox","answer","setArrOfAnswer","arrOfAnswer","index","arr","multipleChoice","trans","setTrans","map","ele","TabPane","Tabs","Quiz","setIndexOfQuestion","isOpen","setIsOpen","nextQuestion","handleCloseDialog","percent","showInfo","activeKey","String","parseInt","tabPosition","i","tab","question","publicRoutes","path","privateRoutes","Routes","route","exact","App","queryString","search","URLSearchParams","get","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.253ee880.chunk.js","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PublicRoute = (props) => {\n  const studentID = localStorage.getItem('studentID');\n  if (studentID === null) {\n    // TODO should check authorization here\n    return <Route {...props} />;\n  }\n  return <Redirect to='/quiz-instruction' />;\n};\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PrivateRoute = ({ component, ...rest }) => {\n  const studentID = localStorage.getItem('studentID');\n  if (studentID !== null) {\n    // TODO should check authorization here\n\n    return <Route {...rest} component={component} />;\n  }\n\n  // We need to keep the path for first page load\n  // tokenStorageService.set(pathNameKey.FIRST_LOAD, location.pathname);\n  return <Redirect to='/' />;\n};\n","import React from 'react';\nimport 'antd/dist/antd.css';\n\nconst Header = () => {\n  return (\n    <nav>\n      <div className='header'>\n        <img className='header-logo' src='./transparance.png' alt='' />\n      </div>\n    </nav>\n  );\n};\n\nexport default Header;\n","export const API_ROOT_URL = 'https://evening-ridge-31382.herokuapp.com/api';\nexport const LOCALSTORAGE_TOKEN_NAME = 'token';\n// export const API_ROOT_URL = 'http://localhost:5000';","import Axios from 'axios';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Header from '../../components/Header';\nimport { API_ROOT_URL } from '../../configurations';\n\nconst QuizInstruction = () => {\n  const history = useHistory();\n  const handleClick = async () => {\n    const token = JSON.parse(localStorage.getItem('token'));\n    const name = JSON.parse(localStorage.getItem('name'));\n    const studentID = JSON.parse(localStorage.getItem('studentID'));\n    try {\n      const response = await Axios({\n        method: 'GET',\n        url: `${API_ROOT_URL}/user/start`,\n        params: {\n          token: token,\n          studentID: studentID,\n          name: name,\n        },\n      });\n      if (response.data.success) {\n        // redirect to Quiz page\n        localStorage.setItem(\n          'questions',\n          JSON.stringify(response.data.data.questions)\n        );\n        localStorage.setItem(\n          'timeStart',\n          JSON.stringify(response.data.data.timeStart)\n        );\n        let path = `/quiz`;\n        history.push(path);\n      }\n    } catch (err) {\n      if (err.response.status === 403) {\n        let path = '/quiz-summary';\n        history.push(path);\n      } else if (err.response.status === 400) {\n        localStorage.removeItem('token');\n        localStorage.removeItem('studentID');\n        localStorage.removeItem('name');\n        localStorage.removeItem('answer');\n        localStorage.removeItem('question');\n        let path = '/invalid-token';\n        history.push(path);\n      }\n    }\n  };\n  return (\n    <div>\n      <Header />\n      <div className='instructions'>\n        <h1>Cách chơi</h1>\n        <h3>Đọc kỹ hướng dẫn trước khi bước vào thử thách nhé! </h3>\n        <ul className='browser-default' id='main-list'>\n          <li>\n            Các bạn phải hoàn thành 10 câu hỏi được sắp xếp theo thứ tự từ dễ\n            đến khó.\n          </li>\n          <li>\n            Mỗi câu hỏi có 4 đáp án lựa chọn, bạn có thể thay đổi đáp án bằng\n            cách quay trở lại câu hỏi trước.\n          </li>\n          <li>Thời gian làm bài sẽ được tính khi bạn ấn vào ô Bắt đầu.</li>\n          <li>Mỗi bạn chỉ được làm 1 bài Quiz duy nhất.</li>\n        </ul>\n        <div>\n          <button className='start-button' onClick={handleClick}>\n            Bắt đầu\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default QuizInstruction;\n","import React, { useState } from 'react';\nimport './style.scss';\nconst InputField = ({\n  register,\n  name,\n  label,\n  type,\n  errors,\n  valid,\n  icon,\n  isTaken,\n}) => {\n  const [isFocused, setIsFocused] = useState(false);\n  const [currentText, setCurrentText] = useState('');\n  return (\n    <div className={isFocused ? 'input-container focus' : 'input-container'}>\n      <div className='input-icon'>{icon}</div>\n      <div className='input-field'>\n        <h5>{label}</h5>\n        <input\n          type={type}\n          name={name}\n          className='input'\n          ref={valid || register({ required: `${label} is required` })}\n          onChange={(e) => setCurrentText(e.target.value)}\n          onFocus={() => setIsFocused(true)}\n          onBlur={() => {\n            !currentText && setIsFocused(false);\n          }}\n        />\n        {errors[name] && <span>{errors[name].message}</span>}\n      </div>\n    </div>\n  );\n};\n\nexport default InputField;\n","import {LOCALSTORAGE_TOKEN_NAME} from '../configurations';\nimport jwt_decode from 'jwt-decode';\nclass LocalStorageUtils {\n  getItem(key, defaultValue = '\"\"') {\n    if (typeof localStorage !== 'undefined') {\n      let item = localStorage.getItem(key);\n      if (item && item === 'undefined') item = defaultValue;\n      return JSON.parse(item);\n    }\n    return undefined;\n  }\n\n  setItem(key, value = '') {\n    if (typeof localStorage !== 'undefined') {\n      localStorage.setItem(key, JSON.stringify(value));\n    }\n  }\n\n  removeItem(key) {\n    if (typeof localStorage !== 'undefined') {\n      localStorage.removeItem(key);\n    }\n  }\n\n  clear() {\n    if (typeof localStorage !== 'undefined') {\n      localStorage.clear();\n    }\n  }\n  deleteUser() {\n    this.removeItem(LOCALSTORAGE_TOKEN_NAME);\n    window.location.reload(false);\n  }\n  getUser() {\n    if (typeof localStorage !== 'undefined') {\n      const token = this.getItem(LOCALSTORAGE_TOKEN_NAME);\n      if (token) {\n        try {\n          jwt_decode(token);\n          return jwt_decode(token);\n        } catch (ex) {\n          if (ex.response && ex.response.status === 401) {\n            this.deleteUser();\n          }\n        }\n      } else return token;\n    }\n    return undefined;\n  }\n\n  getToken() {\n    return this.getItem(LOCALSTORAGE_TOKEN_NAME);\n  }\n}\n\nexport default new LocalStorageUtils();\n","import Axios from 'axios';\nimport objectAssign from 'object-assign';\nimport {API_ROOT_URL} from '../configurations';\nimport LocalStorageUtils from './LocalStorageUtils';\nexport const getHeaders = () => {\n  return {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${LocalStorageUtils.getToken()}`,\n  };\n};\n\nexport const request = (endpoint, method, headers = {}, params = {}, body = {}) => {\n  return Axios({\n    url: API_ROOT_URL + endpoint,\n    method: method,\n    headers: objectAssign(getHeaders(), headers),\n    params: objectAssign(params),\n    data: body,\n  });\n};\n\nexport const get = (endpoint, params = {}, headers = {}) => {\n  return request(endpoint, 'GET', headers, params);\n};\n\nexport const post = (endpoint, body = {}, params = {}, headers = {}) => {\n  return request(endpoint, 'POST', headers, params, body);\n};\n\nexport const put = (endpoint, body = {}, params = {}, headers = {}) => {\n  return request(endpoint, 'PUT', headers, params, body);\n};\n\nexport const remove = (endpoint, body = {}, params = {}, headers = {}) => {\n  return request(endpoint, 'DELETE', headers, params, body);\n};\n","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport Header from '../../components/Header';\nimport InputField from '../../components/InputField';\nimport './styles.scss';\nimport logoMiniGame from '../../assets/images/logo.png';\nimport { post } from '../../utils/ApiCaller';\n\nconst WelcomePage = () => {\n  const { register, handleSubmit, errors } = useForm();\n  const history = useHistory();\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const onSubmit = async (data) => {\n    try {\n      setIsSubmitted(true);\n      setIsError(false);\n      const token = JSON.parse(localStorage.getItem('token'));\n      const response = await post('/user/register', {\n        token: token,\n        name: data.name,\n        studentID: data.studentID.toUpperCase(),\n      });\n      if (response.data.success) {\n        localStorage.setItem('name', JSON.stringify(data.name));\n        localStorage.setItem(\n          'studentID',\n          JSON.stringify(data.studentID.toUpperCase())\n        );\n        // redirect to Introduction\n        let path = '/quiz-instruction';\n        history.push(path);\n      }\n    } catch (ex) {\n      if (ex.response && ex.response.status === 403) {\n        setIsSubmitted(false);\n        setIsError(true);\n      } else if (ex.response && ex.response.status === 400) {\n        localStorage.clear();\n        let path = '/invalid-token';\n        history.push(path);\n      }\n    }\n  };\n  return (\n    <div>\n      <Header />\n      <img className='logoMiniGame' src={logoMiniGame} alt='' />\n      <form className='form-wrapper' onSubmit={handleSubmit(onSubmit)}>\n        <InputField\n          register={register}\n          icon={<i className='fa fas fa-user'></i>}\n          name='name'\n          type='text'\n          label='Họ và tên'\n          errors={errors}\n          valid={register({\n            required: `Họ và tên không được bỏ trống`,\n          })}\n        />\n        <InputField\n          register={register}\n          icon={<i className='fa fas fa-user'></i>}\n          name='studentID'\n          type='text'\n          label='MSSV'\n          errors={errors}\n          valid={register({\n            required: `MSSV không được bỏ trống`,\n          })}\n        />\n        <span className='error' style={{ display: !isError && 'none' }}>\n          MSSV này đã được sử dụng để đăng kí với mã QR khác.\n        </span>\n        <button className='login-button' disabled={isSubmitted}>\n          <i\n            className='fa fa-refresh fa-spin'\n            style={{ display: !isSubmitted && 'none' }}\n          ></i>{' '}\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default WelcomePage;\n","import React from 'react';\nimport Header from '../../components/Header';\nimport errorPic from '../../assets/images/error.jpg';\nimport './styles.scss';\nconst InvalidToken = () => {\n  return (\n    <div className='error-container'>\n      <Header />\n      <img className='error-pic' src={errorPic} alt='error' width={'30%'} />\n      <h1 className='alert-text'>\n        Mã QR không hợp lệ. Vui lòng đến quầy để nhận mã QR khác.\n      </h1>\n    </div>\n  );\n};\n\nexport default InvalidToken;\n","import React from 'react';\nimport Header from '../../components/Header';\nimport './styles.scss';\nconst QuizSummary = () => {\n  return (\n    <div>\n      <Header />\n      <div className='summary-container'>\n        <h2>Chúc mừng bạn đã hoàn thành bài Quiz.</h2>\n        <h4>Vui lòng theo dõi Fanpage F-Code để đón nhận kết quả nhé!!</h4>\n        <h4>Hẹn gặp lại các bạn vào lúc 14h chiều nay nha!!</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default QuizSummary;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { timeConvert } from './convert-time';\n\nconst Timer = ({ initialTime }) => {\n  const startTime = initialTime;\n  const [time, setTime] = useState(0);\n\n  useEffect(() => {\n    let timer = setInterval(() => {\n      setTime(Date.now() - startTime);\n    }, 1000);\n    return () => clearInterval(timer);\n  });\n  return <span>{timeConvert(time)}</span>;\n};\n\nexport default Timer;\n","export const timeConvert = (mSec) => {\n  let seconds = Math.round(mSec / 1000);\n  let minutes = Math.floor(seconds / 60);\n  let sec = seconds % 60;\n  minutes = minutes < 10 ? '0' + minutes : '' + minutes;\n  sec = sec < 10 ? '0' + sec : '' + sec;\n  return minutes + ':' + sec;\n};\n","import React from 'react';\n\nimport Timer from '../../../components/Timer';\n\nimport 'antd/dist/antd.css';\nconst Header = ({ indexOfQuestion }) => {\n  const timeStart = JSON.parse(localStorage.getItem('timeStart'));\n  return (\n    <nav>\n      <div className='header'>\n        <img className='header-logo' src='./transparance.png' alt='' />\n\n        <div className='header-timer'>\n          <i className='fa fa-stopwatch'></i>\n          <Timer initialTime={timeStart} />\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default React.memo(Header);\n","import React from 'react';\nimport './styles.scss';\nconst Question = ({ content }) => {\n  return (\n    <div className='question-box'>\n      <div className='question-content'>\n        <p>{content}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Question;\n","import React from 'react';\n\nconst AnswerBox = ({\n  answer,\n  setArrOfAnswer,\n  arrOfAnswer,\n  index,\n  indexOfQuestion,\n}) => {\n  const handleClick = () => {\n    let arr = arrOfAnswer;\n    if (arr[indexOfQuestion - 1] !== index + 1) {\n      arr[indexOfQuestion - 1] = index + 1;\n      setArrOfAnswer([...arr]);\n    }\n  };\n\n  return (\n    <div\n      className={\n        arrOfAnswer[indexOfQuestion - 1] === index + 1\n          ? 'choosing-container container'\n          : 'container'\n      }\n      onClick={handleClick}\n    >\n      {answer}\n    </div>\n  );\n};\n\nexport default AnswerBox;\n","import React from 'react';\nimport AnswerBox from '../../../../components/Answer-box';\n\nconst Answer = ({\n  multipleChoice,\n  indexOfQuestion,\n  trans,\n  setTrans,\n  arrOfAnswer,\n  setArrOfAnswer,\n}) => {\n  return (\n    <div className='answer-container'>\n      {multipleChoice.map((ele, index) => {\n        return (\n          <AnswerBox\n            key={index}\n            answer={ele}\n            arrOfAnswer={arrOfAnswer}\n            setArrOfAnswer={setArrOfAnswer}\n            index={index}\n            indexOfQuestion={indexOfQuestion}\n            trans={trans}\n            setTrans={setTrans}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default React.memo(Answer);\n","import React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport { API_ROOT_URL } from '../../../configurations';\nimport Question from './Question';\nimport 'antd/dist/antd.css';\nimport Answer from './Answer';\nimport './styles.scss';\nimport { Tabs, Progress } from 'antd';\nimport { useHistory } from 'react-router-dom';\nconst { TabPane } = Tabs;\n\nconst Quiz = () => {\n  const data = JSON.parse(localStorage.getItem('questions'));\n  const token = JSON.parse(localStorage.getItem('token'));\n  const name = JSON.parse(localStorage.getItem('name'));\n  const studentID = JSON.parse(localStorage.getItem('studentID'));\n  const history = useHistory();\n  const [indexOfQuestion, setIndexOfQuestion] = useState(1);\n  const [arrOfAnswer, setArrOfAnswer] = useState(\n    JSON.parse(localStorage.getItem('answer')) || [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  );\n\n  useEffect(() => {\n    localStorage.setItem('answer', JSON.stringify(arrOfAnswer));\n  }, [arrOfAnswer]);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const preQuestion = () => {\n    if (indexOfQuestion > 1) setIndexOfQuestion(indexOfQuestion - 1);\n  };\n  const nextQuestion = () => {\n    if (indexOfQuestion < 10) setIndexOfQuestion(indexOfQuestion + 1);\n  };\n  const handleOpenDialog = () => {\n    setIsOpen(true);\n  };\n\n  const handleCloseDialog = () => {\n    setIsOpen(false);\n  };\n  const handleSubmit = async () => {\n    setIsOpen(false);\n    const arrOfAnswer = JSON.parse(localStorage.getItem('answer'));\n    try {\n      const response = await Axios({\n        method: 'POST',\n        url: `${API_ROOT_URL}/user/end`,\n        data: {\n          token: token,\n          name: name,\n          studentID: studentID,\n          answer: arrOfAnswer,\n        },\n      });\n      if (response.data.success) {\n        localStorage.clear();\n        let path = '/quiz-summary';\n        history.push(path);\n      }\n    } catch (ex) {\n      if (ex.response && ex.response.status === 403) {\n        let path = '/quiz-summary';\n        history.push(path);\n      } else if (ex.response && ex.response.status === 400) {\n        localStorage.clear();\n\n        let path = '/invalid-token';\n        history.push(path);\n      }\n    }\n  };\n  return (\n    <div className='quiz-container'>\n      <div className='header-progress'>\n        <p>{indexOfQuestion}/10</p>\n        <Progress percent={indexOfQuestion * 10} showInfo={false} />\n      </div>\n      <Tabs\n        className='tab-question'\n        activeKey={String(indexOfQuestion - 1)}\n        onChange={(e) => setIndexOfQuestion(parseInt(e) + 1)}\n        tabPosition={'top'}\n        style={{ width: '100%' }}\n      >\n        {data.map((e, i) => (\n          <TabPane tab={`Câu ${i + 1}`} key={i}>\n            <Question content={e.question} />\n\n            <div className='quiz-answer'>\n              <Answer\n                indexOfQuestion={i + 1}\n                multipleChoice={e.multipleChoice}\n                nextQuestion={nextQuestion}\n                arrOfAnswer={arrOfAnswer}\n                setArrOfAnswer={setArrOfAnswer}\n              />\n            </div>\n          </TabPane>\n        ))}\n      </Tabs>\n\n      <div className='navigation'>\n        {indexOfQuestion > 1 && (\n          <button className='btn btn-prev' onClick={() => preQuestion()}>\n            <i className='fa fa-arrow-left fa-lg'></i>\n          </button>\n        )}\n        {indexOfQuestion < 10 && (\n          <button className='btn btn-next' onClick={() => nextQuestion()}>\n            <i className='fa fa-arrow-right fa-lg'></i>\n          </button>\n        )}\n      </div>\n      <button className='btn-submit' onClick={handleOpenDialog}>\n        Submit\n      </button>\n      <div\n        className={isOpen ? 'dialog-container' : 'dialog-container-none'}\n        onClick={handleCloseDialog}\n      >\n        <div className='dialog'>\n          <div className='dialog-title'>Bạn đã chắc chắn nộp bài?</div>\n          <div className='dialog-action'>\n            <button className='btn btn-dialog' onClick={handleCloseDialog}>\n              Không\n            </button>\n            <button className='btn btn-dialog' onClick={handleSubmit}>\n              Có\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Quiz;\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport { PublicRoute } from './PublicRoute';\nimport { PrivateRoute } from './PrivateRoute';\nimport QuizInstruction from '../containers/QuizInstruction';\n\nimport WelcomePage from '../containers/WelcomePage';\nimport InvalidToken from '../containers/InvalidToken';\nimport QuizSummary from '../containers/QuizSummary';\nimport QuizPlay from '../containers/QuizPlay';\n\nexport const publicRoutes = [\n  {\n    path: '/',\n    name: 'welcome',\n    component: WelcomePage,\n  },\n  {\n    path: '/invalid-token',\n    name: 'invalid-token',\n    component: InvalidToken,\n  },\n  { path: '/quiz-summary', name: 'quiz-summary', component: QuizSummary },\n];\nexport const privateRoutes = [\n  {\n    path: '/quiz-instruction',\n    name: 'quiz-instruction',\n    component: QuizInstruction,\n  },\n  {\n    path: '/quiz',\n    name: 'quiz',\n    component: QuizPlay,\n  },\n  { path: '/quiz-summary', name: 'quiz-summary', component: QuizSummary },\n];\nexport const Routes = (\n  <Switch>\n    {publicRoutes.map((route) => (\n      <PublicRoute\n        key={route.name}\n        exact={true}\n        path={route.path}\n        component={route.component}\n      />\n    ))}\n    {privateRoutes.map((route) => (\n      <PrivateRoute\n        key={route.name}\n        path={route.path}\n        component={route.component}\n      />\n    ))}\n  </Switch>\n);\n","import React from 'react';\nimport Header from './Header';\nimport Quiz from './Quiz';\nconst QuizPlay = () => {\n  return (\n    <div>\n      <Header />\n      <Quiz />\n    </div>\n  );\n};\n\nexport default QuizPlay;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Routes } from './routes';\nconst App = () => {\n  const queryString = window.location.search;\n  const urlParams = new URLSearchParams(queryString);\n  const token = urlParams.get('token');\n  if (token !== null) {\n    localStorage.setItem('token', JSON.stringify(token));\n  }\n\n  return <BrowserRouter>{Routes}</BrowserRouter>;\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n","module.exports = __webpack_public_path__ + \"static/media/logo.34061f58.png\";","module.exports = __webpack_public_path__ + \"static/media/error.b3d878e7.jpg\";"],"sourceRoot":""}